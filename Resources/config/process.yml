definitions:
    synchronize_marketing_list_item_for_mailchimp_member:
        label:   'Synchronizes OroCRM Marketing List Item for MailChimp Member'
        enabled: true
        entity:  OroCRM\Bundle\MailChimpBundle\Entity\Member
        actions_configuration:
            - @tree:
                conditions:
                    @not_empty: $subscribersList.marketingList
                actions:
                    - @assign_constant_value:
                        attribute: $.statusCleaned
                        value: OroCRM\Bundle\MailChimpBundle\Entity\Member::STATUS_CLEANED
                    - @assign_constant_value:
                        attribute: $.statusUnsubscribed
                        value: OroCRM\Bundle\MailChimpBundle\Entity\Member::STATUS_UNSUBSCRIBED
                    - @create_datetime:
                        attribute: $.lastContactedAt
                    - @create_entity: # create OroCRM Marketing List Item
                        conditions: # if OroCRM Marketing List Item not exists
                            @empty: $marketingListItem
                        parameters:
                            class:     OroCRM\Bundle\MarketingListBundle\Entity\MarketingListItem
                            attribute: $marketingListItem
                            data:
                                entityId:       $id
                                marketingList:  $subscribersList.marketingList
                                contactedTimes: 0
                                lastContactedAt: $.lastContactedAt
                    # Create or remove Marketing List Removed Item depending on status of member
                    - @find_entity: # Find Marketing List Removed Item
                        class: OroCRM\Bundle\MarketingListBundle\Entity\MarketingListRemovedItem
                        where:
                            entityId: $id
                            marketingList: $subscribersList.marketingList.id
                        attribute: $.marketingListRemovedItem
                    - @create_entity: # create OroCRM Marketing List Removed Item
                        conditions: # if Member status equals "cleaned" and Marketing List Removed Item doesn't exist
                            @and:
                                - @equal: [$status, $.statusCleaned]
                                - @empty: $.marketingListRemovedItem
                        parameters:
                            class:     OroCRM\Bundle\MarketingListBundle\Entity\MarketingListRemovedItem
                            attribute: $.marketingListRemovedItem
                            data:
                                entityId:       $id
                                marketingList:  $subscribersList.marketingList
                    - @remove_entity: # remove OroCRM Marketing List Removed Item
                        conditions: # if Member status not equals "cleaned" and Marketing List Removed Item exists
                            @and:
                                - @not_equal: [$status, $.statusCleaned]
                                - @not_empty: $.marketingListRemovedItem
                        parameters: [$.marketingListRemovedItem]
                    # Create or remove Marketing List Unsubscribed Item depending on status of member
                    - @find_entity: # Find Marketing List Unsubscribed Item
                        class: OroCRM\Bundle\MarketingListBundle\Entity\MarketingListUnsubscribedItem
                        where:
                            entityId: $id
                            marketingList: $subscribersList.marketingList.id
                        attribute: $.marketingListUnsubscribedItem
                    - @create_entity: # create OroCRM Marketing List Unsubscribed Item
                        conditions: # if Member status equals "unsubscribed" and Marketing List Unsubscribed Item doesn't exist
                            @and:
                                - @equal: [$status, $.statusUnsubscribed]
                                - @empty: $.marketingListUnsubscribedItem
                        parameters:
                            class:     OroCRM\Bundle\MarketingListBundle\Entity\MarketingListUnsubscribedItem
                            attribute: $.marketingListUnsubscribedItem
                            data:
                                entityId:       $id
                                marketingList:  $subscribersList.marketingList
                    - @remove_entity: # remove OroCRM Marketing List Unsubscribed Item
                        conditions: # if Member status not equals "unsubscribed" and Marketing List Unsubscribed Item exists
                            @and:
                                - @not_equal: [$status, $.statusUnsubscribed]
                                - @not_empty: $.marketingListUnsubscribedItem
                        parameters: [$.marketingListUnsubscribedItem]

    create_marketing_list_for_new_mailchimp_list:
        label:   'Create OroCRM Marketing List Item for MailChimp List'
        enabled: true
        entity:  OroCRM\Bundle\MailChimpBundle\Entity\SubscribersList
        actions_configuration:
            # Create OroCRM Marketing List, if it's not exist and if channel is available and enabled
            - @tree:
                conditions:
                    @and:
                        - @empty: $marketingList
                        - @not_empty: $channel
                        - @eq: [$channel.enabled, true]
                actions:
                    # create OroCRM Marketing List and connect it with MailChimp List
                    - @create_entity:
                        parameters:
                            class:     OroCRM\Bundle\MarketingListBundle\Entity\MarketingList
                            attribute: $marketingList
                            data:
                                name:          $name
                                entity:        OroCRM\Bundle\MailChimpBundle\Entity\Member
                    # Set OroCRM Marketing List to manual
                    - @assign_constant_value:
                        attribute: $.manualTypeCode
                        value: OroCRM\Bundle\MarketingListBundle\Entity\MarketingListType::TYPE_MANUAL
                    - @find_entity:
                        class: OroCRM\Bundle\MarketingListBundle\Entity\MarketingListType
                        identifier: $.manualTypeCode
                        attribute: $marketingList.type
                    # Set OroCRM Marketing List to owner based on integration channel
                    - @populate_integration_owner:
                        attribute: $marketingList
                        integration: $channel

triggers:
    synchronize_marketing_list_item_for_mailchimp_member:
        -
            event:    create
            queued:   true
        -
            event:    update
            queued:   true
            field:    status
    create_marketing_list_for_new_mailchimp_list:
        -
            event:    create
            queued:   true
